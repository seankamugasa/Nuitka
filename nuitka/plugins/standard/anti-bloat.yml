psutil:
  description:
    "resolve platform specific imports at compile time"
  context:
    - "import psutil"
  replacements:
    "from ._common import AIX" : "'AIX = %r' % psutil.AIX"
    "from ._common import BSD" : "'BSD = %r' % psutil.BSD"
    "from ._common import FREEBSD" : "'FREEBSD = %r' % + psutil.FREEBSD"
    "from ._common import LINUX" : "'LINUX = %r' % + psutil.LINUX"
    "from ._common import MACOS" : "'MACOS = %r' % + psutil.MACOS"
    "from ._common import NETBSD" : "'NETBSD = %r' % + psutil.NETBSD"
    "from ._common import OPENBSD" : "'OPENBSD = %r' % + psutil.OPENBSD"
    "from ._common import OSX" : "'OSX = %r' % psutil.OSX"
    "from ._common import POSIX" : "'POSIX = %r' % psutil.POSIX"
    "from ._common import SUNOS" : "'SUNOS = %r' % psutil.SUNOS"
    "from ._common import WINDOWS" : "'WINDOWS = %r' % psutil.WINDOWS"
numpy:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy._pytesttester import PytestTester" : ""
    "from numpy.testing._private.pytesttester import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
    "from .testing import Tester" : ""
    "import numpy.testing as testing" : ""
numpy.core:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy._pytesttester import PytestTester" : ""
    "from numpy.testing._private.pytesttester import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
numpy.matrixlib:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy._pytesttester import PytestTester" : ""
    "from numpy.testing._private.pytesttester import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
numpy.ma:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy._pytesttester import PytestTester" : ""
    "from numpy.testing._private.pytesttester import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
numpy.random:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy._pytesttester import PytestTester" : ""
    "from numpy.testing._private.pytesttester import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
numpy.polynomial:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy._pytesttester import PytestTester" : ""
    "from numpy.testing._private.pytesttester import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
numpy.fft:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy._pytesttester import PytestTester" : ""
    "from numpy.testing._private.pytesttester import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
numpy.linalg:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy._pytesttester import PytestTester" : ""
    "from numpy.testing._private.pytesttester import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
numpy.lib:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy._pytesttester import PytestTester" : ""
    "from numpy.testing._private.pytesttester import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
numpy.ctypeslib:
  description:
    "remove numpy.distutils references"
  context:
    - "import numpy.distutils.misc_util"
  replacements:
    "from numpy.distutils.misc_util import get_shared_lib_extension" : ""
    "get_shared_lib_extension()" : "repr(numpy.distutils.misc_util.get_shared_lib_extension())"
    "get_shared_lib_extension(is_python_ext=True)" : "repr(numpy.distutils.misc_util.get_shared_lib_extension(is_python_ext=True))"
cffi.ffiplatform:
  description:
    "disable distutils hacks"
  replacements:
    "import setuptools" : "'pass'"
scipy:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy.testing import Tester" : ""
    "test = Tester().test" : ""
    "from scipy._lib._testutils import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
scipy._lib:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy.testing import Tester" : ""
    "test = Tester().test" : ""
    "from scipy._lib._testutils import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
scipy.lib:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy.testing import Tester" : ""
    "test = Tester().test" : ""
    "from scipy._lib._testutils import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
scipy.linalg:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy.testing import Tester" : ""
    "test = Tester().test" : ""
    "bench = Tester().bench" : ""
    "from scipy._lib._testutils import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
scipy.sparse:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy.testing import Tester" : ""
    "test = Tester().test" : ""
    "from scipy._lib._testutils import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
scipy.stats:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy.testing import Tester" : ""
    "test = Tester().test" : ""
    "from scipy._lib._testutils import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
scipy.stats.morestats:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy.testing.decorators import setastest" : ""
    "@setastest(False)" : ""
scipy.integrate:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy.testing import Tester" : ""
    "test = Tester().test" : ""
    "from scipy._lib._testutils import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
scipy.interpolate:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy.testing import Tester" : ""
    "test = Tester().test" : ""
    "from scipy._lib._testutils import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
scipy.spatial:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy.testing import Tester" : ""
    "test = Tester().test" : ""
    "from scipy._lib._testutils import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
scipy.optimize:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy.testing import Tester" : ""
    "test = Tester().test" : ""
    "from scipy._lib._testutils import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
scipy.sparse.csgraph:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy.testing import Tester" : ""
    "test = Tester().test" : ""
    "from scipy._lib._testutils import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
scipy.sparse.linalg:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy.testing import Tester" : ""
    "test = Tester().test" : ""
    "from scipy._lib._testutils import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
scipy.sparse.linalg.eigen:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy.testing import Tester" : ""
    "test = Tester().test" : ""
    "from scipy._lib._testutils import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
scipy.sparse.linalg.eigen.lobpcg:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy.testing import Tester" : ""
    "test = Tester().test" : ""
    "from scipy._lib._testutils import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
scipy.sparse.linalg.eigen.lobpcg.lobpcg:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy.testing import assert_allclose" : ""
scipy.sparse.linalg.dsolve:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy.testing import Tester" : ""
    "test = Tester().test" : ""
    "from scipy._lib._testutils import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
scipy.sparse.linalg.isolve:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy.testing import Tester" : ""
    "test = Tester().test" : ""
    "from scipy._lib._testutils import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
scipy.special:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy.testing import Tester" : ""
    "test = Tester().test" : ""
    "from scipy._lib._testutils import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
scipy.misc:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy.testing import Tester" : ""
    "test = Tester().test" : ""
    "from scipy._lib._testutils import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
scipy._lib._numpy_compat:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy.testing import suppress_warnings" : "r'suppress_warnings = __import__(\"contextmanager\").contextmanager(lambda : (yield))'"
    "NumpyVersion(np.__version__) > '1.7.0.dev'" : "'0'"
scipy.cluster:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy.testing import Tester" : ""
    "test = Tester().test" : ""
    "from scipy._lib._testutils import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
scipy.signal:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy.testing import Tester" : ""
    "test = Tester().test" : ""
    "bench = Tester().bench" : ""
    "from scipy._lib._testutils import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""
scipy.fftpack:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy.testing import Tester" : ""
    "test = Tester().test" : ""
    "bench = Tester().bench" : ""
    "from scipy._lib._testutils import PytestTester" : ""
    "test = PytestTester(__name__)" : ""
    "del PytestTester" : ""

sklearn.random_projection:
  description:
    "remove numpy testing framework"
  replacements:
    "from numpy.testing import assert_equal" : "r'assert_equal = (lambda actual, desired, err_msg=None, verbose=True: True)'"

matplotlib:
  description:
    "remove pytest testing framework"
  replacements:
    "test.__test__ = False" : ""
  change_function:
    "_init_tests": "'None'"
    "test": "'None'"
